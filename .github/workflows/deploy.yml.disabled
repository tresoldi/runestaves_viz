name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master  # Deploy on push to master branch
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Needed to push to gh-pages branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for version info

      - name: Checkout data repository
        uses: actions/checkout@v4
        with:
          repository: evotext/runestaves_data
          path: runestaves_data
        continue-on-error: true
        id: checkout-data

      - name: Check data repository
        run: |
          if [ ! -d "runestaves_data/zenodo/data" ]; then
            echo "❌ Data repository checkout failed!"
            echo ""
            echo "The evotext/runestaves_data repository appears to be private."
            echo "To fix this, you need to create a Personal Access Token (PAT):"
            echo ""
            echo "1. Go to: https://github.com/settings/tokens"
            echo "2. Click 'Generate new token (classic)'"
            echo "3. Name: runestaves_viz_deploy"
            echo "4. Select scope: repo (Full control of private repositories)"
            echo "5. Copy the generated token"
            echo ""
            echo "Then add it as a repository secret:"
            echo "6. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "7. Click 'New repository secret'"
            echo "8. Name: DATA_REPO_PAT"
            echo "9. Value: Paste your token"
            echo "10. Re-run this workflow"
            echo ""
            echo "Alternatively, if the data can be public, make evotext/runestaves_data public."
            exit 1
          fi
          echo "✓ Data repository checkout successful"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Validate data
        run: |
          python scripts/validate_data.py \
            --data-dir runestaves_data/zenodo/data

      - name: Prepare data files
        run: |
          python scripts/prepare_data.py \
            --data-dir runestaves_data/zenodo/data \
            --release-dir runestaves_data/release \
            --output-dir site/data

      - name: Build static site
        run: |
          python scripts/build_site.py \
            --data-dir runestaves_data/zenodo/data \
            --site-dir site \
            --base-path /runestaves_viz

      - name: Validate generated site
        run: |
          python scripts/validate_site.py --site-dir site || true

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          publish_branch: gh-pages
          force_orphan: true  # Clean history on gh-pages
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy site - ${{ github.ref_name }}'

      - name: Create deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Date:** $(date -I)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Site deployed to: https://$(echo ${{ github.repository }} | cut -d'/' -f1).github.io/$(echo ${{ github.repository }} | cut -d'/' -f2)" >> $GITHUB_STEP_SUMMARY
